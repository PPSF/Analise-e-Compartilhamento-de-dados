{
    "contents" : "## Day 2 of R course\n### Andrew and Alathea\n#### 29 de setembro de 2015\n\n###Code/Insert section -- organizando o script em sessões\n\n# load packages -----------------------------------------------------------\n\nlibrary(ggplot2)\n\n\n# load data ---------------------------------------------------------------\n\ngapminder <- read.csv(\"data/gapminder.csv\")\n\n\n# load functions ----------------------------------------------------------\n\nsource(\"scripts/functions.R\")\n\n# subsseting review -------------------------------------------------------\n\n##methos of subsetting\n# x[a] for vectors\nx <- c(10:1)\nx\nx[3]\n\n\n# x[a,b] for matrices, data frames, not lists\n\n# x[\"a\"] for call the name of an element, like column, row, or part of a list\nx <- c(1:10)\nnames(x) <- letters[1:10]\nx\nx[\"b\"]\n\n# x[[a]] for lists and data frames\nx <- list(c(1:10), c(10:20))\nx\nx[[1]]\n\n# x$a call a column or a part os a list or data frame\nnames(x) <- c(\"one\", \"two\")\nx\nx$two\n\n\n###more complex subsetting\n\n# >, <, ==\n\ngapminder[gapminder$country==\"Brazil\",] ##call elements really equal to a something\n\nx <- c(1:10)\nx\nx[x>7]\nx[x<3]\n\n# %in%\nx <- c(1:10)\nnames(x) <- letters[1:10]\nx\nx[names(x) %in% c(\"b\", \"c\", \"d\")]\nx[x%in%c(2,3,4)]\n\n\n#exercise\ngapminder [gapminder$year==1957,]\n\ngapminder[-c(1:4)]\n\ngapminder[gapminder$lifeExp>80,]\n\ngapminder[1, c(4:5)]\n\ngapminder[gapminder$year == 2002 | gapminder$year ==2007,] #or\na <- gapminder [gapminder$year == 2002,]\nb <- gapminder [gapminder$year == 2007,]\nrbind(a,b) #or\ngapminder[gapminder$year %in% c(2002, 2007),]\n\n\n\n# plotting review ---------------------------------------------------------\n\nggplot(data=gapminder, aes(x=lifeExp, y= gdpPercap))+geom_point()\n\nggplot(data=gapminder, aes(x=lifeExp, y= gdpPercap, colour = continent))+geom_point()\n\nggplot(data=gapminder, aes(x=lifeExp, y= gdpPercap, colour = continent))+geom_point()\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent))+geom_point() +stat_smooth(method=\"lm\")\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent))+geom_point() +stat_smooth(method=\"lm\")\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent, group=country))+geom_point() +geom_line()\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent, group=country))+geom_point() +geom_line()+scale_y_log10()\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent, group=country))+geom_point(colour=\"black\") +geom_line()+scale_y_log10()\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent, group=country))+geom_line()+geom_point(colour=\"black\")+scale_y_log10()\n\n\nggplot(data=gapminder, aes(x=year, y= pop, colour = continent, group=country))+geom_line()+geom_point(colour=\"black\")+scale_y_log10() + facet_wrap(~continent)\n\nggplot(data=gapminder,aes(x=lifeExp, y=gdpPercap))+geom_point(size=1.5, colour=\"brown\")+scale_y_log10()+geom_smooth(method=\"lm\", size=1.0, colour=\"black\")\n\n###ggplot cheat sheet\n###ggplotdocumentation\n\nhead(gapminder)\n\n###density plots\nggplot(gapminder, aes(x=gdpPercap)) + geom_density(aes(x=continent, colour = continent, fill=continent, alpha=0.1))\n\nggplot (gapminder, aes(x=gdpPercap, colour=continent, fill=continent)) + geom_density(alpha=0.5) + facet_wrap(~year) + scale_x_log10()\n\nggplot (gapminder, aes(x=gdpPercap, fill=continent)) + geom_density(alpha=0.5) + facet_wrap(~year) + scale_x_log10() + ggtitle(\"PIB por Continente\") + ylab (\"Densidade de PIB\") + xlab (\"PIB\") + labs (fill = \"Continente\")\n\n\n# saving a plot -----------------------------------------------------------\n\nggsave(\"figures/density_plot.pdf\")\n#ou salvar em outros formatos\n\npdf(file=\"figures/pdf_density_plot.pdf\", height = 7)\nggplot(gapminder, aes(x=gdpPercap)) + geom_density(aes(x=continent, colour = continent, fill=continent, alpha=0.1))\ndev.off()\n\n#challenge - multiple plots\npdf(file=\"figures/pdf_density_plot_multi.pdf\", height = 7)\n\nggplot(gapminder, aes(x=gdpPercap)) + geom_density(aes(x=continent, colour = continent, fill=continent, alpha=0.1))\n\nggplot (gapminder, aes(x=gdpPercap, fill=continent)) + geom_density(alpha=0.5) + facet_wrap(~year) + scale_x_log10() + ggtitle(\"PIB por Continente\") + ylab (\"Densidade de PIB\") + xlab (\"PIB\") + labs (fill = \"Continente\")\n\nggplot(data=gapminder,aes(x=lifeExp, y=gdpPercap))+geom_point(size=1.5, colour=\"brown\")+scale_y_log10()+geom_smooth(method=\"lm\", size=1.0, colour=\"black\") + facet_grid (~continent)\n\n\ndev.off()\n\n\n# Working with data frames ------------------------------------------------\n\n#rbind and cbind can add rows and columns to data frames\n\nhead(iris)\n\n#add a new column \n\niris$Family <- \"Iridaceae\"\nhead(iris)\n\n#add a column using data from the data frame\n\niris$Petal.Area <- iris$Petal.Width*iris$Petal.Length\nhead(iris)\niris$Sepal.Area <- with(iris, Sepal.Width*Sepal.Length)\nhead(iris)\n\n#summary stats\nmean_petal_width <- mean(iris$Petal.Width)\nsd_petal_width <- sd(iris$Petal.Width)\nmedian(iris$Petal.Width)\nsd_petal_width/mean_petal_width\n\nmean_sepal_length <- mean(iris$Sepal.Length)\nsd_sepal_length <- sd(iris$Sepal.Length)\nsd_sepal_length/mean_sepal_length\n\n\n# R Functions -------------------------------------------------------------\n\n#about sources and directories\n#to go down - \"/\"\n#to go up - \"../\"\n\ncal_CV(iris$Sepal.Length)\ncal_CV(iris$Sepal.Width)\ncal_CV(iris$Petal.Area)\ncal_CV(gapminder$gdpPercap)\n\n#area of a circle\n\ncircum_to_diameter(30)\ncircum_to_diameter(3)\n\n\n###Challenge: write a function that calculates the radius from the diameter\n\nradius_from_diameter(10)\n\n\n#area a partir do raio\nradius_to_area(2)\n\n#area a partir da circunferencia\narea_from_circum(40)\n\n\n###make a data.frame\n\ncircs <- data.frame(xs=10:200)\nhead(circs)\ncircs$areas <- area_from_circum(circum=circs$xs)\nhead(circs)\n\nggplot(circs, aes(x=xs, y=areas))+geom_point (colour=\"blue\", size=5.0, alpha=0.5)+geom_line(colour=\"red\", size=1.0)\n\n\n# saving data -------------------------------------------------------------\n\nbrazil <- gapminder[gapminder$country == \"Brazil\",]\nbrazil\n\nwrite.table(x = brazil, file = \"cleaned_data/brazil_data.csv\", sep = \",\")\n\nwrite.table(x = brazil, file = \"cleaned_data/brazil_data.csv2\", sep = \",\", row.names=FALSE, quote=FALSE) #quote remove aspas\n\nwrite.table(x = brazil, file = \"cleaned_data/brazil_data.csv3\", sep = \"\\t\", row.names=FALSE, quote=FALSE)\n\n\n\n#challenge\nhead(gapminder)\ngapminder_since_1990 <- gapminder[gapminder$year>1990,]\n\nwrite.table(x=gapminder_since_1990, file=\"cleaned_data/gapminder_since_1990.csv\", sep=\"\\t\", row.names=FALSE, quote=FALSE)",
    "created" : 1443528443187.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "2975872437",
    "id" : "11A52B1C",
    "lastKnownWriteTime" : 1443615904,
    "path" : "C:/Users/PedroPaulo/Desktop/Mestrado - disciplinas/Análise e Compartilhamento de dados/scripts/day2.R",
    "project_path" : "scripts/day2.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}