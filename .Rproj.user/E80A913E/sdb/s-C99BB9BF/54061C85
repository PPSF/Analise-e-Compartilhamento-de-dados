{
    "contents" : "# R course by Andrew and Alathea\n# Rio, 28 de setembro de 2015\n\n2+2\n\n## objects\nx <- 5\nx * 2\n\n## math functions\nlog (x)\nlog10(x)\n\n?log\n\n## \"nome da função\"(\"argumentos\")\n\n\nx\nx > 2 ##texto\n\nx == 5 #= duplo -> realmente igual\n\nx <- 1000\nx\n\nx <- 1000\n\n## \"alt -\" = <-\n\n\n##exercise\nmass <- 47.5\nage <- 122\nmass <- mass *2.3\nage <- age - 20\n\nmass > age\n\nPedro <- 10\nPedro\n\n\n# Data types\n\n#logical\na <-  TRUE\nb <- FALSE\n\n# integer\nc <- 5L\n\n#double\nd <- 5\n\n#complex number\ne <-  1 + 2i\n\n#character\nf <- \"cat\"\n\n## What kind of data type do I have?\ntypeof(c)\ntypeof(d)\n\nis.integer(c)\n\nis.logical(c)\n\n\n#exercise: assign a value to a variable with the characteristic\n\n# logical\nanswer <- TRUE\n# numeric\nheight <- 10\n#character\ndog_name <-  \"Tom\"\n\nis.logical (answer)\nis.numeric(height)\nis.character(dog_name)\n\n\n\n\n##Data structure\n\n### Vector\nvec1 <- vector(\"character\")\nvec1\n\nvec2 <- vector(\"character\", length=5)\nvec2\n\nvec3 <- c(1,2,3,4,5)\nvec3\n\nvec4 <- c(0:100)\nvec4\n\nvec5 <- seq(0,100,by = 0.5) #sequência de 0.5 em 0.5 até 100\nvec5\n\nvec6 <- c(TRUE, 10L, \"cat\") #different types of data in a vector\nvec6\ntypeof(vec6)\n\nas.double(vec6)\nvec6\n#NA = no avaiable\n\n##Getting information about an object's structure\nx <- 0:10000\n\nlength (x)\nstr(x)\nhead(x)\ntail(x)\n\nages <- c(23,24,25,32,49)\nages\n\nnames (ages) <- c(\"Juliana\", \"Rodrigo\", \"Carlos\", \"Bella\", \"Andrew\")\nages\n\ntypeof(ages)\n?double\n\n## numeric is not a formal type, is a category for numeric type, that includes \"double\" and \"integer\" type.\n\n\n\n### Matrices\n\nx <- matrix(1:10, nrow=5, ncol=2)\nx\nstr(x)\n\nrownames(x) <- c(\"a\", \"b\", \"c\", \"d\", \"e\") #nomear linhas\ncolnames(x) <-  c(\"a\", \"b\") #nomear colunas\nx\n\n##exercise\nrnorm(18)\nY <- matrix(rnorm(18), ncol=6, nrow=3)\nY\nlength(Y)\n\nz <- matrix (1:50, ncol=5, nrow=10)\nz\n?matrix\nz <- matrix (1:50, ncol=5, nrow=10, byrow=TRUE) #default é preencher pela coluna (byrow=FALSE).\nz\nz <- matrix (1:50, ncol=5, byrow=10)\nz\n\n##Factors - variáveis categóricas\nx <- factor (c(\"yes\", \"no\", \"yes\", \"yes\"))\nx\ntypeof(x)\nstr(x)\n\nx <- factor (c(\"case\", \"control\", \"control\", \"case\"), levels = c(\"control\", \"case\"))\nstr(x)\n\n\n\n###Lists: contain multiple data types\n\nx <- list (1, \"a\", TRUE, 5L)\nx\nxlist <- list(name=\"Iris Data\", nums=1:10, data=head(iris))\nxlist\n\n\n###Data frame\n\ndf <-  data.frame(a=c(1,2,3),b=c(\"a!\", \"b\", \"c\"), c=c(TRUE, FALSE, FALSE))\ndf\n\n#matrix tem apenas um tipo de dados, enquanto data frame tem vários tipos de dados\n\n#exercise\n\ndf <- data.frame(id=c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"), x=1:6, y=c(214:219))\ndf\n\nlength(df)\n\n#Adding rows and columns to data frames\nrbind(df, df) #row bind\ncbind (df, df) #colum bind\n\n\n#exercise\ndframe <- data.frame (first=\"Pedro\", last=\"Ferreira\", age=\"23\")\ndframe\ndframe2 <- data.frame (first=\"Marina\", last=\"Moreira\", age=\"30\")\ngod <- rbind(dframe,dframe2)\ndframe3 <- data.frame (first=\"Vinicius\", last=\"Giglio\", age=\"31\")\nrbind (god, dframe3)\n\n\n\n###subsetting\n####taking out parts of larger objects\n\nx <- c(5.4,6.2,7.1,4.8,7.5)\nnames(x) <- c(\"a\", \"b\",\"c\",\"d\",\"e\")\nx\ntypeof(x)\n\nx[1]\nx\nx[3]\nx[c(3,5)] #vetor do objeto \"x\"\n\nx[2:4]\nx[c(1,1,1,5)]\nx[1:5]\nx[5:1]\n\n##skipping elements\nx[-1]\nx[-c(2,4)]\n\n\n#exercise\na <- x[2:4]\nb <- x[c(2, 3, 4)]\nc <- x[-c(1,5)]\nd <- x[c(\"b\", \"c\", \"d\")]\ne <- x[c(FALSE, TRUE, TRUE, TRUE, FALSE)]\n\n\n#subsetting by name\nx[\"a\"]\nnames(x)\nnames(x) == \"c\"\n\nisitc <- names(x) == \"c\"\nx[isitc]\n\n\n#for matching multiple things\nnames(x) %in% c(\"b\", \"c\", \"d\") ## %in% calls the vector inside the first one\nx[names(x) %in% c(\"b\", \"c\", \"d\")] #para chamar as colunas b, c, d dentro do data frame x, por exemplo\n\n\n###multiple conditions\na <- 1:10\na\na>7\na[a>7] ##getting a small subset of vector a\na[a>=7]\n\n\nTRUE & TRUE\nTRUE & FALSE\nTRUE|TRUE\nTRUE|FALSE\n1:5 * 10\n1:5*1:5\n\n\n#exercise\nx\nx<4\na <- x>4\nb <- x<7\nd <- a&b\nd\nx[d]\nx\nx [x>4 & x<7]\n\n\nas.numeric (FALSE)\nas.numeric (TRUE)\n\n#how many times is x greater than 6???\nas.numeric (x>6)\nsum (x>6)\n\n##matrices\nset.seed(1)\nm <- matrix(rnorm(6*4), ncol=4, nrow=6)\nm\n##getting first 3 rows, second and third columns\nm[1:3, c(2,3)]\nm[,3] ##third column\nm[3,] ##third line\nm[1:2,] ##linhas 1 até 2\n\n\n##subsetting lists\nxlist <- list (a=\"UFRJ\", b=1:10, c=head(iris))\nxlist\n\nxlist[1] #a box from the list, but still a box for the list\nxlist[\"a\"] #a box from the list, but still a box for the list\nxlist$a #the name, or the content, from the box of the list\nxlist[[1]] #the name, or the content, from the box of the list\nxlist[[\"a\"]] #the name, or the content, from the box of the list\n\ntypeof(xlist[1]) #a box from the list, but still a box for the list\ntypeof(xlist$a) #the name, or the content, from the box of the list\n\nxlist\nxlist$b[2] #chamar um objeto do vetor \"b\" da lista\n\n\n\n##reading list\ngapminder <- read.csv(\"gapminder.csv\")\nhead(gapminder)\nstr(gapminder)\n\n\ngapminder[,5]\ngapminder$pop\ngapminder[,\"pop\"]\n\ngapminder[1:2,]\ngapminder$country == \"Brazil\"\nBRASIL <- gapminder$country == \"Brazil\"\ngapminder [BRASIL,]\n\n\n##plotting\nlibrary(ggplot2)\n\n##lifeExp and GDP\nggplot(data=gapminder, aes(x=lifeExp, y=gdpPercap)) + geom_point() #aes = qual parte da figura (eixo) corresponde com qual parta do data frame\n\n## GDP over time\nggplot(data=gapminder, aes(x=year, y=gdpPercap)) + geom_point()\n\n##colour by country\nggplot(data=gapminder, aes(x=lifeExp, y=gdpPercap, colour = country)) + geom_point()\n\n##line plots\nggplot(data=gapminder, aes(x=year, y=lifeExp, colour=country)) + geom_line()\nggplot(data=gapminder, aes(x=year, y=lifeExp, colour=country)) + geom_line() + geom_point ()\nggplot(data=gapminder, aes(x=year, y=lifeExp)) + geom_line(aes(colour=country))+geom_point()\n\n\n##transformations and statistics\nggplot(gapminder, aes(x=lifeExp, y=gdpPercap)) + geom_point () + scale_y_log10()\nggplot(gapminder, aes(x=lifeExp, y=gdpPercap)) + geom_point () + scale_y_log10() + stat_smooth(method = \"lm\")\n\nggplot(gapminder, aes(x=lifeExp, y=gdpPercap, colour=continent)) + geom_point () + scale_y_log10() + stat_smooth(method = \"lm\")\n\n\n\n\ngm90 <- gapminder[gapminder$year > 1990, ]\nhead(gm90)\n\nggplot (gm90, aes(x=lifeExp, y=gdpPercap))+geom_point()+scale_y_log10()+geom_smooth(method=\"lm\") + facet_wrap(~year) #facet wrap mostra gráfico por ano\n\nggplot (gm90, aes(x=lifeExp, y=gdpPercap))+geom_point()+scale_y_log10()+stat_smooth(method=\"lm\") + facet_wrap(~year) #facet wrap mostra gráfico por ano\n\n##stat = geom ?\n\nggplot (gm90, aes(x=lifeExp, y=gdpPercap))+geom_point()+scale_y_log10()+geom_smooth(method=\"lm\") + facet_grid(continent~year) #grid plotando ano X continente\n\n",
    "created" : 1443528960245.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "3377242883",
    "id" : "54061C85",
    "lastKnownWriteTime" : 1443538470,
    "path" : "C:/Users/PedroPaulo/Desktop/Mestrado - disciplinas/Análise e Compartilhamento de dados/scripts/day1.R",
    "project_path" : "scripts/day1.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}